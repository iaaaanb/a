<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="ian-thinkpad" name="model.PlayerTest" tests="21" errors="0" failures="0" skipped="0" time="0.02" timestamp="2025-09-03T23:48:14">
          <properties>
      <property name="java.specification.version" value="21"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://adoptium.net/"/><property name="sun.boot.library.path" value="/home/ian-berdichewsky/.sdkman/candidates/java/21.0.8-tem/lib"/><property name="sun.java.command" value="/home/ian-berdichewsky/.sdkman/candidates/sbt/1.11.4/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2025-07-15"/><property name="java.home" value="/home/ian-berdichewsky/.sdkman/candidates/java/21.0.8-tem"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="21.0.8+9-LTS"/><property name="user.name" value="ian-berdichewsky"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/ian-berdichewsky/.cache/JNA/temp/jna17226462198193328119.tmp"/><property name="java.vendor.version" value="Temurin-21.0.8+9"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="21.0.8"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="native.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="stderr.encoding" value="UTF-8"/><property name="java.vendor" value="Eclipse Adoptium"/><property name="scala.ext.dirs" value="/home/ian-berdichewsky/.sbt/1.0/java9-rt-ext-eclipse_adoptium_21_0_8"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/home/ian-berdichewsky/.sdkman/candidates/sbt/1.11.4/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Eclipse Adoptium"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="America/Santiago"/><property name="java.vm.specification.version" value="21"/><property name="os.name" value="Linux"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/ian-berdichewsky"/><property name="user.language" value="en"/><property name="sbt.script" value="/home/ian-berdichewsky/.sdkman/candidates/sbt/current/bin/sbt"/><property name="sbt.ipcsocket.tmpdir" value="/run/user/1000/.sbtb969ea7d/ipcsocket"/><property name="swoval.tmpdir" value="/run/user/1000/.sbtb969ea7d/swoval"/><property name="jline.esc.timeout" value="0"/><property name="stdout.encoding" value="UTF-8"/><property name="path.separator" value=":"/><property name="os.version" value="6.14.0-29-generic"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/><property name="user.dir" value="/home/ian-berdichewsky/memes/tareas/tarea-1"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="21.0.8+9-LTS"/><property name="java.class.version" value="65.0"/>
    </properties>
          <testcase classname="model.PlayerTest" name="Player should be created with correct name" time="0.007">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should be created with correct board side" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should start with 2 gems" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should start with empty hand" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should start with empty deck" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should lose a gem" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should lose two gems" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player cannot have negative gems" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should detect when they have lost" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should add card to deck" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should add multiple cards to deck" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should draw card from deck to hand" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player cannot draw from empty deck" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should draw multiple cards correctly" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should play card from hand" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player cannot play card not in hand" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player should have maximum 10 cards in hand" time="0.002">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player can get card from hand by index" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player returns None for invalid hand index" time="0.0">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player can get card from deck by index" time="0.001">
                      
                    </testcase><testcase classname="model.PlayerTest" name="Player returns None for invalid deck index" time="0.0">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>